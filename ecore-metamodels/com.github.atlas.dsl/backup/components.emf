@namespace(uri="http://www.github.com/jrharbin-york/atlas-middleware/dsl/components", prefix="atlas")
package Atlas;

import "http://www.github.com/jrharbin-york/atlas-middleware/dsl/region";

class Model {
 val Component[*] components;
}

abstract class ComponentProperty {
 attr String name; 
}

class IntProperty extends ComponentProperty {
 attr int value;
}

class PointProperty extends ComponentProperty {
	val Atlas.Point value;
}

class StringProperty extends ComponentProperty {
 attr String value;
}

class DoubleProperty extends ComponentProperty {
 attr double value;
}

class Component {
	// TODO: should have maps here
 	val ComponentProperty[] componentProperties;
}

class NamedComponent extends Component {
 attr String name; 
}

abstract class Subcomponent extends Component {
 
}

class Robot extends NamedComponent {
 	val Subcomponent[0..*]#parent subcomponents;
}

class Computer extends NamedComponent {
 	val Subcomponent[0..*]#parent subcomponents;
}

enum SensorType {
 SONAR = 1;
 GPS_POSITION = 2;
 CAMERA = 3;
}

enum ActuatorType {
 MOTOR = 1;
}

class Sensor extends Subcomponent {
 attr SensorType type;
 attr String[1..*] detections;
}

class Actuator extends Subcomponent {
 attr ActuatorType type;
 attr String[1..*] commands;
}

class ProcessingUnit extends Subcomponent {
 
}

class MotionSource extends Subcomponent {
 	attr double maxSpeed;
 	attr double energyRate;
 	attr double energyPerDistance;
 	attr String[0..*] params;
}

abstract class EnergyResource extends Subcomponent {
 
}

class Battery extends EnergyResource {
 attr int totalEnergy; 
}

class EnergySource extends EnergyResource {
 attr int productionRate;
}
